apply plugin: 'com.android.application'
apply plugin: 'android-apt'
apply plugin: 'sonar-runner'

def AAVersion = '3.2'

buildscript {
	repositories {
		jcenter()
	}

	dependencies {
		classpath 'com.android.tools.build:gradle:1.1.3'
		classpath 'com.neenbedankt.gradle.plugins:android-apt:1.4'
	}
}

apt {
	arguments {
		androidManifestFile variant.outputs[0].processResources.manifestFile
		resourcePackageName rootProject.name
	}
}

android {
	compileSdkVersion 21
	buildToolsVersion "21.1.2"

	defaultConfig {
		applicationId rootProject.name
		minSdkVersion 14
		targetSdkVersion 21
	}

	// put the properties in .gradle/gradle.properties
	if (project.hasProperty("RELEASE_STORE_FILE")) {
		signingConfigs {
			release {
				storeFile file(RELEASE_STORE_FILE)
				storePassword RELEASE_STORE_PASSWORD
				keyAlias RELEASE_KEY_ALIAS
				keyPassword RELEASE_KEY_PASSWORD
			}
		}
	}

	buildTypes {
		if (project.hasProperty("RELEASE_STORE_FILE")) {
			release {
				minifyEnabled true
				proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
				signingConfig signingConfigs.release
			}
		}
	}

	testOptions { 
		unitTests.returnDefaultValues = true
	}
}

sonarRunner {
    sonarProperties {
        property "sonar.host.url", SONAR_HOST_URL
        property "sonar.jdbc.url", SONAR_JDBC_URL
        property "sonar.jdbc.driverClassName", SONAR_JDBC_DRIVERCLASSNAME
        property "sonar.jdbc.username", SONAR_JDBC_USERNAME
        property "sonar.jdbc.password", SONAR_JDBC_PASSWORD
    }
}

repositories {
	jcenter()
}

dependencies {
	apt "org.androidannotations:androidannotations:$AAVersion"
	compile "org.androidannotations:androidannotations-api:$AAVersion"
	testCompile "junit:junit:4.12"
	testCompile "org.mockito:mockito-core:1.9.5"
}
